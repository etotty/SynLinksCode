
%macro fastbb(indat,outdat,bbvarlist,outsize=insize,seed=0,suffix=);
  %local indat outdat bbvarlist seed outsize suffix i nobs nout;
  * count number of obs in input data;
  data indat&suffix. (keep=_donor_ &bbvarlist.) a&suffix. (keep=_donor_ a) amax&suffix. (keep=amax);
    set &indat. end=lastobs;
    retain seed &seed.;
    retain amax;
    _donor_=_n_;
    output indat&suffix.;
    call ranuni(seed,a);
    amax=max(amax,a);
    output a&suffix.;
    if lastobs then do;
      call symput ("seed",compress(put(seed,12.)));
      call symput ("nobs",compress(put(_n_,12.)));
      output amax&suffix.;
    end;
  run;
  %if &outsize=insize %then %let nout=&nobs.;
  %else %let nout=&outsize.;
  %if &nobs.>1 %then %do;
    * draw sampling probabilities;
    proc sort data=a&suffix.;
      by a;
    run;
    * take uniform random draws for the output data;
    data b&suffix. (keep=_donee_ b);
      seed=&seed.;
      do _donee_=1 to &nout.;
        call ranuni(seed,b);
        output;
      end;
      call symput ("seed",compress(put(seed,12.)));
    run;
    proc sort data=b&suffix.;
      by b;
    run;
    * use the uniform random draws for the output data to sample from the realized sampling probabilities;
    data b&suffix. (keep=_donee_ _donor_ b cdf);
      set b&suffix.;
      retain alast 0;
      retain cdf 0;
      retain last_donor;
      if _n_=1 then set amax&suffix.;
      if b<cdf then do;
        _donor_=last_donor;
        output;
      end;
      else do;
        if alast=0 then do;
          setstop=0;
          do until(setstop=1);
            set a&suffix.;
            if a/amax>b or a=amax then do;
              cdf=a/amax;
              output;
              setstop=1;
              if a=amax then alast=1;
            end;
          end;
        end;
        else do;
          _donor_=last_donor;
          output;
        end;
      end;
      last_donor=_donor_;
    run;
    * after sampling a donor for each donee, merge on relevant donor information;
    proc sort data=b&suffix.;
      by _donor_;
    run;
    data b&suffix.;
      merge b&suffix. (in=aa) indat&suffix. (in=bb);
      by _donor_;
      if aa and bb;
    run;
    proc sort data=b&suffix. out=&outdat. (keep=&bbvarlist.);
      by _donee_;
    run;
    proc datasets lib=work nolist;
      delete b&suffix.;
    run;
  %end;
  %else %if &nobs.=1 %then %do;
    data &outdat.;
      %do i=1 %to &nout.;
        set &indat. (keep=&bbvarlist.); output;
      %end;
    run;
  %end;
  proc datasets lib=work nolist;
    delete a&suffix. amax&suffix. indat&suffix.;
  run;
  %global outseed;
  %let outseed=&seed.;
%mend;


