
%macro srmi;
  %include "macros/minor_functions.sas";
  %include "macros/model_select_syn.sas";
  %include "macros/stratify.sas";
  %include "macros/parallel_bb.sas";
  %include "macros/parallel_logit.sas";
  %include "macros/parallel_linreg.sas";
  %include "metadata/calculate_macro1.sas";
  %include "metadata/calculate_macro2.sas";
  %include "metadata/calculate_macro3.sas";
  %include "metadata/drop_macro.sas";
  %include "metadata/select_universe.sas";
  libname metadata "metadata";
  libname mainwork "&mainwork.";
  libname inlib "&inputlib.";
  libname outlib "&outputlib.";
  %let impwork=%sysfunc(pathname(work));
  data metadata.pid_m&m.;
    pid=&sysjobid.;
  run;

  *** Make sure SRMI_PROGRESS&m. is sensible;
  data _null_;
    set metadata.srmi_progress&m. end=lastobs;
    retain initial lag_status;
    if _n_=1 then initial=srmi_status;
    else do;
      if srmi_status>initial or srmi_status>lag_status then do;
        put "ERROR: Metadata indicates " varname
          "is on a later iteration than variables preceding it in the SRMI list";
        abort abend;
      end;
      else if srmi_status<initial-1 then do;
        put "ERROR: Metadata indicates " varname
          "is more than 1 iteration behind the variables preceding it in the SRMI list";
        abort abend;
      end;
    end;
    lag_status=srmi_status;
  run;
  *** Find out current state of progress from SRMI_PROGRESS&m.;
  %let starting_iteration=0;
  %let starting_varnum=0;
  data _null_;
    set metadata.srmi_progress&m. nobs=nobs;
    retain initial;
    if _n_=1 then initial=srmi_status;
    if srmi_status<initial then do;
      call symput("starting_iteration",compress(put(initial,12.)));
      call symput("starting_varnum",compress(put(_n_,12.)));
      call symput("numvars",compress(put(nobs,12.)));
      stop;
    end;
    if _n_=nobs then do;
      call symput("starting_iteration",compress(put(srmi_status+1,12.)));
      call symput("starting_varnum",compress(put(1,12.)));
      call symput("numvars",compress(put(nobs,12.)));
    end;
  run;
  %put Based on METADATA/SRMI_PROGRESS&m..SAS7BDAT:;
  %put We are starting this run of SRMI with;
  %put variable number &starting_varnum. in iteration=&starting_iteration..;

  *** Start iterations of SRMI;
  %let all_clear=1;
  %do n=&starting_iteration. %to &num_iterations;
    %if &n.>&starting_iteration. %then %let starting_varnum=1;
    *** If starting from the beginning, initialize completed file with the input file;
    %if &n.=1 and &starting_varnum.=1 %then %do;
      data extra_outvars (keep=varname check_name);
        set metadata.all_vars_referenced (where=(check_type in (3,6)));
        if varname ne check_name then output;
      run;
      proc sort data=extra_outvars;
        by varname;
      run;
      data all_outvars (keep=srmi_order varname check_name);
        set metadata.srmi_progress&m.;
        srmi_order=_n_;
        check_name=varname;
      run;
      proc sort data=all_outvars;
        by varname;
      run;
      data extra_outvars;
        merge extra_outvars (in=aa) all_outvars (in=bb drop=check_name);
        by varname;
        if aa & bb;
      run;
      data all_outvars;
        set all_outvars extra_outvars;
      run;
      proc sort data=all_outvars;
        by srmi_order;
      run;
      data _null_;
        set all_outvars end=lastobs;
        call symput("var" || compress(put(_n_,4.)),compress(check_name));
        if lastobs then call symput("n_outvars",compress(put(_n_,4.)));
      run;
      data outlib.&outfilename.;
        set inlib.&infilename.;
        %do varnum=1 %to &n_outvars.;
          &&var&varnum..=.Z;
        %end;
      run;
    %end;
    *** Variables where source=0 do not get imputed;
    data metadata.srmi_progress&m. (drop=_startvarnum_);
      set metadata.srmi_progress&m. end=lastobs;
      retain _startvarnum_ &starting_varnum.;
      if source=0 and _n_ ge _startvarnum_ then do;
        _startvarnum_=_startvarnum_+1;
        srmi_status=&n.;
      end;
      if lastobs then call symput("starting_varnum",compress(put(_startvarnum_,12.)));
    run;
    *** Impute variables sequentially in each iteration of SRMI;
    %do varnum=&starting_varnum. %to &numvars.;
      %if &all_clear.=1 %then %do;
        %let all_clear=0;
        *** Record current seed in metadata;
        data metadata.current_seed&m.;
          set metadata.current_seed&m.;
          current_seed=&seed.;
        run;
        *** Grab some basic information about the next variable to be imputed;
        data _null_;
          set metadata.srmi_progress&m. (firstobs=&varnum. obs=&varnum.);
          call symput("curvar",compress(varname));
          call symput("model",compress(put(model,4.)));
          call symput("level",compress(put(level,4.)));
        run;
        proc print data=metadata.current_seed&m.;
          title "Current seed entering imputation of &curvar. in iteration &n..";
        run;
        *** use metadata to choose appropriate model and synthesize &CURVAR.;
        %model_selection;
        %if &all_clear.=1 %then %do;
          data metadata.srmi_progress&m.;
            modify metadata.srmi_progress&m. (where=(varname="&curvar."));
            srmi_status=&n.;
          run;
        %end;
        %else %do;
          %put ERROR: ALL_CLEAR flag was not set to 1. Something went wrong with the imputation of &curvar. during iteration &n.;
          %put Not all values of imputation set received an imputation;
          data _null_;
            abort abend;
          run;
        %end;
      %end;
    %end;
  %end;
%mend;



